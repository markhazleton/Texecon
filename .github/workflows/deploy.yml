name: CI and Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Prevent overlapping page deployments
concurrency:
  group: "pages"
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build (and type-check)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Determine Vite base path for GitHub Pages
        shell: bash
        run: |
          # If a CNAME exists, we assume a custom domain and base path '/'
          if [ -f client/public/CNAME ]; then
            echo "VITE_BASE_PATH=/" >> "$GITHUB_ENV"
            DOMAIN=$(cat client/public/CNAME | tr -d '\n\r')
            echo "SITE_BASE_URL=https://$DOMAIN" >> "$GITHUB_ENV"
          else
            # Project pages default to '/<repo>/'
            echo "VITE_BASE_PATH=/${GITHUB_REPOSITORY#*/}/" >> "$GITHUB_ENV"
            OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
            REPO=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)
            echo "SITE_BASE_URL=https://$OWNER.github.io/$REPO" >> "$GITHUB_ENV"
          fi

      - name: Install dependencies (incl. dev)
        run: npm ci --include=dev

      - name: Type check
        run: npm run type-check

      - name: Build
        run: npm run build

      # Only prepare and upload the Pages artifact on non-PR events
      - name: Setup Pages
        if: github.event_name != 'pull_request'
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./target

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
